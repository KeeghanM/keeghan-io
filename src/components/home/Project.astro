---
import * as prismic from "@prismicio/client"
import { Icon } from "astro-icon"
import techIcons from "../../lib/techIcons"

const { project } = Astro.props
const title = project.data.name[0].text
const url = project.data.website_link.url
const short_description = project.data.short_description
const creation_date = prismic
  .asDate(project.data.creation_date)
  ?.toLocaleDateString("en-GB")
const tech_stack = project.data.technologies
const project_type = project.data.type
const wip = project.data.wip
---

<div class="project">
  <div class="content flow">
    <h3>
      <a href={url}>
        {title}
        <Icon name="fluent:open-20-regular" />
      </a>
      {
        wip && (
          <img
            src="https://camo.githubusercontent.com/7f8dab7b0d83bc7e34106e4446800ec6a4bf0413d37170648f5535283ca460dc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5374617475732d576f726b253230696e25323050726f67726573732d79656c6c6f77"
            alt="Work In Progress"
            data-canonical-src="https://img.shields.io/badge/Status-Work%20in%20Progress-yellow"
            style="max-width: 100%;"
          />
        )
      }
    </h3>
    <div class="details">
      <div class="labels">
        <p><span>Project Type:</span> {project_type}</p>
        <p><span>Built:</span> {creation_date}</p>
      </div>
      <p>{short_description}</p>
    </div>
    <span
      class="showMore"
      onclick="this.parentElement.parentElement.classList.toggle('expanded')"
      style="cursor: pointer;"
      >Details <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        ><path
          fill="currentColor"
          d="M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6l-6-6l1.41-1.42Z"
        ></path></svg
      ></span
    >
    <span
      class="showLess"
      onclick="this.parentElement.parentElement.classList.toggle('expanded')"
      style="cursor: pointer;"
      >Details <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        ><path
          fill="currentColor"
          d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6l1.41 1.41Z"
        ></path></svg
      ></span
    >
  </div>
  <div class="tech">
    <h4>Built With:</h4>
    <div class="stack">
      {
        tech_stack.map((tech: { technology: string }) => {
          const tech_name = tech.technology
          const icon_string = techIcons[tech_name]
          return (
            <div class="tooltip">
              <span class="tooltiptext">{tech_name}</span>
              <Icon name={icon_string} />
            </div>
          )
        })
      }
    </div>
  </div>
</div>

<style>
  .project {
    position: relative;
    background: linear-gradient(135deg, var(--startCol), var(--endCol));
    border-radius: 10px;
    isolation: isolate;
    overflow: hidden;
    margin-bottom: 40px;
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
  .project::before {
    content: "";
    position: absolute;
    inset: 1px;
    border-radius: inherit;
    background: black;
    z-index: -1;
  }
  .content {
    padding: 1rem;
  }
  .details {
    display: none;
  }

  h3 {
    font-size: 1.6rem;
  }
  h4 {
    color: var(--endCol);
  }
  a {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    color: inherit;
    text-decoration: none;
  }
  a:hover {
    color: #eb3a02;
  }
  p span {
    font-weight: bold;
  }
  .labels {
    display: flex;
    gap: 1rem;
  }

  [astro-icon] {
    width: 25px;
    height: 25px;
  }
  .tech {
    background: rgba(255, 255, 255, 0.9);
    color: black;
    padding: 1rem;
    overflow: hidden;
    bottom: 0;
  }
  .stack {
    display: flex;
    gap: 1rem;
    align-items: center;
  }
  .tech [astro-icon] {
    width: 50px;
    height: 50px;
  }

  .tooltip {
    position: relative;
    display: inline-block;
  }
  .tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: #555;
    color: #fff;
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    margin-left: -60px;
    opacity: 0;
    transition: opacity 0.3s;
  }

  .tooltip .tooltiptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
  }

  .tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
  }

  .showMore,
  .expanded .showLess {
    display: flex;
    align-items: center;
    font-weight: bold;
  }
  .showMore:hover,
  .expanded .showLess:hover {
    color: #eb3a02;
  }

  .showLess {
    display: none;
  }
  .project.expanded {
    display: flex;
    flex-direction: column;
  }
  .expanded .stack {
    flex-wrap: wrap;
  }
  .expanded .tech {
    overflow: auto;
  }
  .expanded .details {
    display: block;
  }
  .expanded .showMore {
    display: none;
  }
</style>
